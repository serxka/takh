#!/bin/bash

GL_IN=scripts/gl.procs

GL_HEADER=include/graphic/gl.h
GL_SOURCE=src/graphic/gl.c

lines=$(cat $GL_IN)

cat << EOF > $GL_HEADER
// DO NOT EDIT THIS FILE BY HAND

#ifndef _GL_H_
#define _GL_H_

#include <GLFW/glfw3.h>

EOF

while read line;
do
	echo "extern $line" >> $GL_HEADER
done < $GL_IN

cat << EOF >> $GL_HEADER

void gl_loadproc(void);
void gl_loadproc_minimal(void);

#endif // _GL_H_
EOF

cat << EOF > $GL_SOURCE
// DO NOT EDIT THIS FILE BY HAND

#include <GLFW/glfw3.h>

#include "graphic/gl.h"
#include "common.h"

#define LOADPROC(func) do { void(**fn)(void) = (void(**)(void))&gl_ ##func; \\
                            *fn = glfwGetProcAddress("gl" #func); \\
                            if (*fn == (void*)0) fatalln("failed to load symbol gl" #func); \\
                          } while (0)

EOF

while read line;
do
	echo "$line" >> $GL_SOURCE
done < $GL_IN

echo -e "\nvoid gl_loadproc(void) {" >> $GL_SOURCE

while read line;
do
	func=$(echo $line | cut -d '_' -f2 | cut -d ')' -f1)
	echo -e "\tLOADPROC($func);" >> $GL_SOURCE
done < $GL_IN

cat << EOF >> $GL_SOURCE
}

void gl_loadproc_minimal(void) {
	LOADPROC(GetIntegerv);
}

EOF